{"version":3,"sources":["book-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YA2BA;gBASC,uBAAuB;gBAEvB,YAAoB,WAAyB,EAAU,MAAc;oBAAjD,gBAAW,GAAX,WAAW,CAAc;oBAAU,WAAM,GAAN,MAAM,CAAQ;gBAAI,CAAC;gBAE1E,QAAQ;oBACP,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,wCAAwC;oBACxC,mCAAmC;gBACpC,CAAC;gBAED,MAAM;oBACL,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;yBACvB,SAAS,CACV,GAAG,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG;oBACvB,2DAA2D;oBAC3D,KAAK,IAAI,IAAI,CAAC,YAAY,GAAQ,KAAK,CACtC,CAAC;oBAGH,0BAA0B;oBAE1B,gBAAgB;oBAChB,4CAA4C;oBAC5C,4CAA4C;oBAC5C,MAAM;oBACN,gDAAgD;gBACjD,CAAC;gBAED,QAAQ,CAAC,IAAU;oBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,+EAA+E;oBAE/E,gEAAgE;oBAEhE,gEAAgE;oBAChE,8CAA8C;oBAG9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAA;oBAErD,0CAA0C;oBAC1C,oCAAoC;oBAEpC,iCAAiC;gBAElC,CAAC;YAEF,CAAC;YA7ED;gBAAC,gBAAS,CAAC;oBACV,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE;;;;;;;;;;;CAWV;oBACA,MAAM,EAAE,CAAC;;;;CAIT,CAAC;iBACD,CAAC;;iCAAA;YAEF,iDAwDC,CAAA","file":"../book-list.component.js","sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Book } from \"./book\";\r\nimport { BooksService } from \"./books.service\";\r\n\r\n@Component({\r\n\tselector: \"book-list\",\r\n\ttemplate: `\r\n<h2>{{title}}</h2>\r\n\r\n<ul class=\"books\">\r\n <li *ngFor=\"let book of books\"\r\n[class.selected]=\"book === selectedBook\"\r\n(click)=\"onSelect(book)\">\r\n<span> {{book.Title}}, {{book.Author}}</span>\r\n</li>\r\n</ul>'\r\n\r\n`,\r\n\tstyles: [`\r\nli.selected {\r\nbackground-color: #cccccc;\r\n}\r\n`]\r\n})\r\n\r\nexport class BookListComponent implements OnInit {\r\n\tselectedBook: Book;\r\n\r\n\t//\t@Input() class: string;\r\n\t//title: string;\r\n\r\n\tbooks: Book[];\r\n\terrorMessage: string;\r\n\r\n\t//title = \"Books List\";\r\n\r\n\tconstructor(private bookService: BooksService, private router: Router) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.getAll();\r\n\t\t//\tthis.title = this.selectedBook.Title;\r\n\t\t//this.title = this.books[1].Title;\r\n\t}\r\n\r\n\tgetAll() {                       // (!)\r\n\t\tthis.bookService.getAll()\r\n\t\t\t.subscribe(\r\n\t\t\tres => this.books = res,\r\n\t\t\t//\tconsole.log(this.books); // make sure you get data here.\r\n\t\t\terror => this.errorMessage = <any>error\r\n\t\t\t);\r\n\r\n\r\n\t\t//this.bookService.get(1);\r\n\r\n\t\t//this.books = [\r\n\t\t//\t{ Id: 1, Title: 'BBB1', Author: 'AAA1' },\r\n\t\t//\t{ Id: 2, Title: 'BBB2', Author: 'AAA2' }\t\r\n\t\t//];\t\t\r\n\t\t//this.selectedBook = new Book(1, 'BBB', 'AAA');\r\n\t}\r\n\r\n\tonSelect(book: Book) {\r\n\t\tthis.selectedBook = book;\r\n\t\t//\tconsole.log(\"item with Id \" + this.selectedBook.Id + \" has been selected.\");\r\n\r\n\t\t//\tthis.router.navigate([\"book\", this.selectedBook.Id]);   //!!!\r\n\r\n\t\t//this.router.navigate(['../api/books', this.selectedBook.Id]); \r\n\t\t//this.router.navigateByUrl(\"../api/books/1\");\r\n\r\n\r\n\t\tthis.router.navigate([\"books\", this.selectedBook.Id])\r\n\r\n\t\t//this.router.navigate([\"books\", book.Id])\r\n\t\t//this.router.navigate([\"books\", 1])\r\n\r\n\t\t//this.bookService.get(book.Id); \r\n\r\n\t}\r\n\r\n}"]}